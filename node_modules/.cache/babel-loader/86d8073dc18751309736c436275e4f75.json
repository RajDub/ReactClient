{"ast":null,"code":"var _jsxFileName = \"C:\\\\rajivd\\\\React\\\\raj-sec-app\\\\src\\\\components\\\\ProductList.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n    this._productUrl = './api/products/products.json';\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(forecasts) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.Product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.Code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.Available\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.Price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, forecast.Product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : ProductList.renderForecastsTable(this.state.forecasts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateWeatherData() {\n    // const response = await fetch('weatherforecast');\n    //  const response = await fetch(this._productUrl);\n    //   const data = await response.json();\n    //   this.setState({ forecasts: data, loading: false });\n    this.setState({\n      forecasts: this._productUrl,\n      loading: false\n    });\n  }\n\n}\nProductList.displayName = ProductList.name;","map":{"version":3,"sources":["C:/rajivd/React/raj-sec-app/src/components/ProductList.js"],"names":["React","Component","ProductList","constructor","props","state","forecasts","loading","_productUrl","componentDidMount","populateWeatherData","renderForecastsTable","map","forecast","Product","Code","Available","Price","render","contents","setState","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAIzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACA,SAAKC,WAAL,GAAmB,8BAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL;AAED;;AAE0B,SAApBC,oBAAoB,CAACL,SAAD,EAAY;AACrC,wBACE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,yBAAgB,YAAvD;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGA,SAAS,CAACM,GAAV,CAAcC,QAAQ,iBACrB;AAAA,kCACE;AAAA,sBAAKA,QAAQ,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASJ,QAAQ,CAACC,OAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKd,KAAL,CAAWE,OAAX,gBACX;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YADW,GAEXL,WAAW,CAACS,oBAAZ,CAAiC,KAAKN,KAAL,CAAWC,SAA5C,CAFJ;AAIA,wBACE;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGa,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEwB,QAAnBT,mBAAmB,GAAG;AAC3B;AACD;AACA;AACA;AACA,SAAKU,QAAL,CAAc;AAAEd,MAAAA,SAAS,EAAE,KAAKE,WAAlB;AAA+BD,MAAAA,OAAO,EAAE;AAAxC,KAAd;AAED;;AA7D0C;AAA9BL,W,CACJmB,W,GAAcnB,WAAW,CAACoB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class ProductList extends Component {\r\n  static displayName = ProductList.name;\r\n   \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n    this._productUrl = './api/products/products.json';\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n    \r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Code</th>\r\n            <th>Available</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.Product}>\r\n              <td>{forecast.Product}</td>\r\n              <td>{forecast.Code}</td>\r\n              <td>{forecast.Available}</td>\r\n              <td>{forecast.Price}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : ProductList.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n   // const response = await fetch('weatherforecast');\r\n  //  const response = await fetch(this._productUrl);\r\n  //   const data = await response.json();\r\n  //   this.setState({ forecasts: data, loading: false });\r\n  this.setState({ forecasts: this._productUrl, loading: false });\r\n\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}