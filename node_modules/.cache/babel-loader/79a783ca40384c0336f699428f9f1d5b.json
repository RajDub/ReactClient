{"ast":null,"code":"var _jsxFileName = \"C:\\\\rajivd\\\\React\\\\raj-sec-app\\\\src\\\\components\\\\StudentList.js\";\nimport React, { Component } from 'react';\nimport { Star } from './Star';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../custom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class StudentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: ''\n    };\n\n    this.toggleImage = () => {\n      this.setState({\n        showImage: !this.state.showImage\n      });\n    };\n\n    this.pageTitle = 'Product List';\n    this.filteredby = \"\";\n\n    this.onTextChange = evnt => {\n      let filterby = evnt.target.value.toLocaleLowerCase();\n      var copy = this.state.forecasts.slice();\n      let x = filterby ? this.state.forecasts.filter(f => f.productName.toLocaleLowerCase().indexOf(filterby) !== -1) : this.personsData;\n      this.filteredby = filterby; //productName.toLocaleLowerCase().indexOf(filterBy) !== -1\n      //this.filteredProducts = x ? this.setState({forecasts:x}) : this.products;\n\n      this.setState({\n        forecasts: x\n      });\n    };\n\n    this.state = {\n      forecasts: [],\n      loading: true,\n      showImage: false\n    };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData(); //this.setState({forecasts:this.personsData,loading:false,showImage:false})\n  }\n\n  // visibilityEx=()=>{return this.state.showImage===true?\"visible\":\"hidden\"; }\n  renderForecastsTable(forecasts) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Star Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.FirstMidName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, forecast.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : this.renderForecastsTable(this.state.forecasts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: this.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-2\",\n              children: \"Filter by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.userName,\n                onChange: this.onTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Filtered by: \", this.filteredby, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), contents]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this);\n  }\n\n  async populateWeatherData() {\n    const response = await fetch('http://localhost:57169/api/Student/'); // const response = await fetch(this._productUrl);\n\n    const data = await response.json();\n    this.setState({\n      forecasts: data,\n      loading: false\n    });\n  }\n\n}\nStudentList.displayName = StudentList.name;","map":{"version":3,"sources":["C:/rajivd/React/raj-sec-app/src/components/StudentList.js"],"names":["React","Component","Star","StudentList","constructor","props","state","userName","toggleImage","setState","showImage","pageTitle","filteredby","onTextChange","evnt","filterby","target","value","toLocaleLowerCase","copy","forecasts","slice","x","filter","f","productName","indexOf","personsData","loading","componentDidMount","populateWeatherData","renderForecastsTable","map","forecast","FirstMidName","ID","render","contents","response","fetch","data","json","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Star} from './Star'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../custom.css'\r\n\r\n export class StudentList extends Component {\r\n  static displayName = StudentList.name;\r\n   \r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true,showImage:false };\r\n   \r\n  }\r\n  state={userName:''};\r\n  componentDidMount() {\r\n   this.populateWeatherData();\r\n    //this.setState({forecasts:this.personsData,loading:false,showImage:false})\r\n  }\r\n \r\n  toggleImage=()=>{\r\n     this.setState({showImage:!this.state.showImage});  \r\n   }\r\n\r\n  \r\n\r\n // visibilityEx=()=>{return this.state.showImage===true?\"visible\":\"hidden\"; }\r\n   renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            {/* <th><button className='btn btn-primary'\r\n                                onClick={this.toggleImage}>\r\n                                 Image\r\n                            </button>\r\n            </th>\r\n            <th>Product</th>\r\n            <th>Code</th>\r\n            <th>Release Date</th>\r\n            <th>Price</th> */}\r\n            <th>Star Rating</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.ID}>\r\n              {/* <td>\r\n                \r\n                 <img style={{visibility:this.state.showImage===true?'visible':'hidden'}} \r\n                 src={forecast.imageUrl} \r\n                 width=\"25\" \r\n                 title={forecast.productName} \r\n                 margin=\"1\" \r\n                 alt=\"Cannot display image\"></img> \r\n              </td>\r\n              <td>{forecast.productName}</td>\r\n              <td>{forecast.productCode}</td>\r\n              <td>{forecast.releaseDate}</td>\r\n              <td>${forecast.price}</td> */}\r\n              {/* <td>{forecast.starRating}</td> */}\r\n              <td>{forecast.FirstMidName}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  pageTitle = 'Product List';\r\n  filteredby=\"\";\r\n\r\n  onTextChange=(evnt)=>{\r\n    let filterby = evnt.target.value.toLocaleLowerCase();\r\n    var copy=this.state.forecasts.slice();\r\n    let  x= filterby ? this.state.forecasts.filter(f=>f.productName.toLocaleLowerCase().indexOf(filterby) !== -1) :this.personsData\r\nthis.filteredby=filterby;\r\n//productName.toLocaleLowerCase().indexOf(filterBy) !== -1\r\n\r\n//this.filteredProducts = x ? this.setState({forecasts:x}) : this.products;\r\n this.setState({forecasts:x});\r\n \r\n    \r\n  }\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : this.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      \r\n        \r\n<div>\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                {this.pageTitle}\r\n            </div>\r\n    <div className='card-body'>\r\n        <div className='row'>\r\n            <div className='col-md-2'>Filter by:</div>\r\n            <div className='col-md-4'>\r\n                <input type='text' value={this.state.userName}  onChange={this.onTextChange} />\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h4>Filtered by: {this.filteredby}  </h4>\r\n            </div>\r\n        </div>\r\n        <div className='table-responsive'></div>\r\n        {contents}\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('http://localhost:57169/api/Student/');\r\n  // const response = await fetch(this._productUrl);\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}